---
import '../styles/globals.scss'
import { siteConfig } from '@/site-config'
import { ViewTransitions } from 'astro:transitions'
import { SITE_TITLE, SITE_DESCRIPTION } from "@/consts"
import { useTranslations, LOCALES, getLocalePaths, type Lang } from "@/i18n"
import { join } from 'path'
import { AstroFont } from 'astro-font'

export interface Props {
  title?: string
  description?: string
  ogImage?: string
  articleDate?: string
  frontmatter?: undefined
}

const { title, description = siteConfig.description, ogImage, articleDate } = Astro.props.frontmatter || Astro.props
const locale = Astro.currentLocale as Lang
const t = useTranslations(locale)
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const socialImageURL = new URL(ogImage ? ogImage : '/open-graph.png', Astro.url).href
const localeTitle = title ? `${title} - ${t(SITE_TITLE)}` : t(SITE_TITLE)
const localeDescription = description || t(SITE_DESCRIPTION)
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <meta name="author" content={siteConfig.author} />
  <meta name="description" content={localeDescription} />
  <meta name="theme-color" content="#ef4d1a" />
  <meta name="color-scheme" content="light dark" />

  <title>{localeTitle}</title>
  <ViewTransitions />

  <!-- Favicon -->
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="icon" sizes="192x192" href="/android-chrome.png" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  
  <!-- Links -->
  <link rel="canonical" href={canonicalURL} />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <link rel="alternate" type="application/rss+xml" title={siteConfig.title} href="/rss.xml" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet" />
  <link rel="preload" href="/fonts/calsans-semibold.woff2" as="font" type="font/woff2" crossorigin />

  <!-- Alternative languages -->
  {getLocalePaths(Astro.url).map((props) => (
    <link
      rel="alternate"
      hreflang={LOCALES[props.lang].lang || props.lang}
      href={Astro.site?.origin + props.path}
    />
  ))}

  <!-- Open Graph -->
  <meta property="og:type" content={articleDate ? 'article' : 'website'} />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={localeTitle} />
  <meta property="og:description" content={localeDescription} />
  <meta property="og:image" content={socialImageURL} />
  <meta property="og:site_name" content={localeTitle} />
  <meta property="og:locale" content={LOCALES[locale].lang || locale} />
  
  {articleDate && (
    <>
      <meta property="article:author" content={siteConfig.author} />
      <meta property="article:published_time" content={articleDate} />
    </>
  )}

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:site" content="@psephopaiktes" />
  <meta name="twitter:title" content={localeTitle} />
  <meta name="twitter:description" content={localeDescription} />
  <meta name="twitter:image" content={socialImageURL} />

  <!-- Dark mode script -->
  <script is:inline>
    const setDarkMode = () => {
      const theme = (() => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();
    
      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      window.localStorage.setItem("theme", theme);
    };
    
    setDarkMode();
    document.addEventListener("astro:after-swap", setDarkMode);
  </script>

<AstroFont
config={[
  {
	preload: false,
	display: 'swap',
	name: 'MerriweatherSans',
	fallback: 'sans-serif',
	src: [
	  {
		weight: '300',
		style: 'normal',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-Light.woff2')
	  },
	  {
		weight: '300',
		style: 'italic',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-LightItalic.woff2')
	  },
	  {
		weight: '400',
		style: 'normal',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-Regular.woff2')
	  },
	  {
		weight: '400',
		style: 'italic',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-Italic.woff2')
	  },
	  {
		weight: '500',
		style: 'normal',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-Medium.woff2')
	  },
	  {
		weight: '500',
		style: 'italic',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-MediumItalic.woff2')
	  },
	  {
		weight: '600',
		style: 'normal',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-SemiBold.woff2')
	  },
	  {
		weight: '600',
		style: 'italic',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-SemiBoldItalic.woff2')
	  },
	  {
		weight: '700',
		preload: true,
		style: 'normal',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-Bold.woff2')
	  },
	  {
		weight: '700',
		style: 'italic',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-BoldItalic.woff2')
	  },
	  {
		weight: '800',
		style: 'normal',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-ExtraBold.woff2')
	  },
	  {
		weight: '800',
		style: 'italic',
		path: join(process.cwd(), 'public', 'fonts', 'MerriweatherSans-ExtraBoldItalic.woff2')
	  }
	]
  }
]}
/>
</head>
