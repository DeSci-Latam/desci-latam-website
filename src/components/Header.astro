---
import HeaderLink from '@/components/HeaderLink'
import TwitterIcon from '@/components/icons/TwitterIcon'
import GithubIcon from '@/components/icons/GithubIcon'
import MenuIcon from './icons/MenuIcon.astro'
import Search from '@/components/Search'
import TagIcon from './icons/TagIcon.astro'
import ToggleTheme from './ToggleTheme.astro'

import LocaleSelect from "@/components/i18n/LocaleSelect";
import { Image } from "astro:assets";
import { useTranslations, type Lang } from "@/i18n";
import { getRelativeLocaleUrl } from "astro:i18n";
const t = useTranslations(Astro.currentLocale as Lang);

import AstroImage from "@/assets/images/logo/logo.svg";

const locale = Astro.currentLocale as Lang;

const isActive = (path: string) =>
  getRelativeLocaleUrl(locale, path) === Astro.url.pathname;

// ADD YOUR SOCIAL NETWORKS HERE
const SOCIALNETWORKS = [
	{
		name: 'Github',
		url: 'https://github.com/danielcgilibert/blog-template',
		icon: GithubIcon
	},

	{
		name: 'Twitter',
		url: 'https://github.com/danielcgilibert/blog-template',
		icon: TwitterIcon
	}
]
---

<header class='relative flex items-center h-12 font-semibold'>
	<!-- <a class='text-lg mr-auto' href='/'>Home</a> -->

	<a class='text-lg mr-auto flex gap-2 items-center' href={getRelativeLocaleUrl(locale, "/")}>
		<Image src={AstroImage} alt="DeSci LATAM Logo" />
		DeSci LATAM
	  </a>


	  <ul class="flex gap-2">
		<li>
		  <a
			href={getRelativeLocaleUrl(locale, "/setup")}
			class={isActive("/setup") ? "active" : null}
		  >
			{t({ es: "Inicio", en: "Setup", "pt": "Setup" })}
		  </a>
		</li>
  
		<li>
		  <a
			href={getRelativeLocaleUrl(locale, "/page")}
			class={isActive("/page") ? "active" : null}
		  >
			{
			  t({
				es: "Acerca de crecimiento",
				en: "Add Page",
				"pt": "Add Page"
			  })
			}
		  </a>
		</li>
  
		<li>
		  <a
			href={getRelativeLocaleUrl(locale, "/feature")}
			class={isActive("/feature") ? "active" : null}
		  >
			{
			  t({
				es: "Nosotros",
				en: "Features",
				"pt": "Features",
			  })
			}
		  </a>
		</li>
  
	   <!--  <li class="en-only">
		  <a
			href={getRelativeLocaleUrl(locale, "/monolingual")}
			class={isActive("/monolingual") ? "active" : null}
		  >
			Monolingual
		  </a>
		</li>
  
		<li>
		  <a
			href={getRelativeLocaleUrl(locale, "/asd")}
			class={isActive("/asd") ? "active" : null}
		  >
			404
		  </a>
		</li>
   -->
		<li>
		  <a
			href={getRelativeLocaleUrl(locale, "/blog")}
			class={isActive("/blog") ? "active" : null}
		  >
			{t({ es: "Blog", en: "Blog", "pt": "Blog"})}
		  </a>
		</li>
  
	   <!--  <li>
		  <a
			href="https://github.com/psephopaiktes/astro-i18n-starter"
			target="_blank"
		  >
			GitHub
			<span class="material-icons-sharp">open_in_new</span>
		  </a>
		</li> -->
	  </ul>
	  <LocaleSelect />
	<div
		id='astro-header-drawer'
		class='shadow rounded-l-lg md:bg-transparent dark:md:bg-transparent bg-white dark:bg-[#0a0910] md:shadow-none md:rounded-none md:border-none md:h-auto md:static absolute transition-transform duration-300 ease-in translate-x-96 md:translate-x-0 top-12 -right-5 pl-4 pt-6 pb-4 md:p-0 h-[200px] w-[200px] z-50'
	>
		<nav
			class='flex h-full flex-col justify-between gap-12 text-left md:flex-row md:w-full md:gap-5'
		>


		
			<div
				class='flex flex-col gap-4 md:flex-row md:border-r-2 border-black pr-4 dark:border-white'
			>
				<HeaderLink href='/tags' class='flex items-center gap-1 text-2xl md:text-base'>
					<TagIcon /> Tags
				</HeaderLink>
			</div>

			<div class='flex justify-center items-center md:justify-end gap-3 md:p-0'>
				{
					SOCIALNETWORKS.map((network) => (
						<HeaderLink class='' href={network.url} target='_blank' aria-label={network.name}>
							<span>{<network.icon />} </span>
						</HeaderLink>
					))
				}
			</div>
		</nav>
	</div>

	<div class='flex items-center gap-3 md:pl-3' transition:persist='navbar'>
		<div>
			<Search />
		</div>
		<ToggleTheme />
		<button id='astro-header-drawer-button' type='button' class='md:ml-6 md:hidden'>
			<MenuIcon />
			<span class='sr-only'>Show Menu</span>
		</button>
	</div>
</header>
<!-- 

<style>
	* {
	  flex-wrap: wrap;
	}
  
	.header-top {
	  display: flex;
	  justify-content: space-between;
	  align-items: center;
	  max-inline-size: 1280px;
	  margin-top: 25px;
	  margin-bottom: 25px;
	padding-inline: var(--sp-m);
	margin-inline: auto;
  }
	
  
   
  
	h1 {
	  margin-block-start: var(--sp-l);
	  margin-inline-start: -0.5em;
	  font-size: 40px;
	  font-family: var(--english-font);
	  font-weight: 900;
	  vertical-align: middle;
	  @media (width < 480px) {
		font-size: 28px;
	  }
  
	  a {
		display: flex;
		align-items: center;
	  }
	  img {
		width: 6em;
		position: relative;
		inset: 0.1em;
	  }
	}
  
	nav {
	  display: flex;
	  align-items: center;
	  gap: var(--sp-m);
	}
	ul {
	  display: flex;
	  gap: var(--sp-s);
	  margin-block-start: var(--sp-s);
  
	  .en-only {
		position: relative;
		&:not(:lang(en))::before {
		  content: "EN";
		  position: absolute;
		  inset: -0.4em -0.6em auto auto;
		  font-size: 0.8em;
		  font-weight: 900;
		  color: var(--color-main);
		  opacity: 0.6;
		}
	  }
  
	  a {
		font-size: 1.05rem;
		display: block;
		font-weight: 600;
		letter-spacing: 0.05em;
		padding-block: 0.2em;
		padding-inline: 0.4em;
		color: var(--color-theme);
		border-radius: 4px;
		&:hover,
		&:active {
		  background: color-mix(in srgb, var(--color-theme) 5%, transparent);
		}
		&.active {
		  pointer-events: none;
		  position: relative;
		  &::before {
			content: "";
			position: absolute;
			inset: 100% 0.4em 0;
			height: 0.2em;
			background: var(--color-theme);
			border-radius: 0.1em;
		  }
		}
		.material-icons-sharp {
		  opacity: 0.6;
		  margin-inline-start: -0.2em;
		  font-size: 0.9em;
		}
	  }
	}
  </style>
   -->


<script>
	document.addEventListener('click', (event) => {
		const menu = document.getElementById('astro-header-drawer')
		const menuButton = document.getElementById('astro-header-drawer-button')
		const isClickInside =
			menu?.contains(event.target as HTMLDivElement) ||
			menuButton?.contains(event.target as HTMLButtonElement)

		if (isClickInside) {
			menu?.classList.toggle('translate-x-96')
		} else {
			menu?.classList.add('translate-x-96')
		}
	})
</script>