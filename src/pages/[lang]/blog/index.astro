---
import { LOCALES, useTranslations, type Lang } from "@/i18n";
import Layout from "@/layouts/Base";
import { Image } from "astro:assets";
import PageHeader from "@/components/page-header";
import { Badge } from "@/components/ui/badge";
import { getPosts } from "@/utils/post";
import CategoryFilter from "@/components/filters/CategoryFilter";
import { getCategoryTranslation } from "@/data/categories";
import type { LocaleKey } from "@/data/types";
import type { CollectionEntry } from "astro:content";

type BlogPost = CollectionEntry<"blog">;

const POST_IMAGE_SIZES = {
  width: 640,
  height: 360,
  quality: 90
};

const defaultCover = {
  src: "/images/default-cover.jpg",
  width: POST_IMAGE_SIZES.width,
  height: POST_IMAGE_SIZES.height
};

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);
const rawPosts = await getPosts(undefined, locale);

const postsData = rawPosts.map(post => ({
  slug: post.slug.split("/").slice(1).join("/"),
  title: post.data.title,
  date: post.data.date,
  category: post.data.category,
  categoryTranslated: getCategoryTranslation(
    post.data.category,
    locale as LocaleKey,
    'blog'
  ),
  cover: post.data.cover,
  originalSlug: post.slug
}));

const title = t({
  es: "Blog",
  en: "Blog",
  pt: "Blog"
});

export function getStaticPaths() {
  return Object.keys(LOCALES).map((lang) => ({
    params: { lang }
  }));
}
---

<Layout title={title}>
  <div class="min-h-screen flex flex-col">
    <PageHeader
      heading={t({
        es: "Noticias, guías y análisis sobre ciencia descentralizada",
        en: "News, guides, and analysis about decentralized science",
        pt: "Notícias, guias e análises sobre ciência descentralizada"
      })}
      text={t({
        es: "Blog",
        en: "Blog",
        pt: "Blog"
      })}
    />

    <main class="flex-1 w-full max-w-[1400px] mx-auto px-4 sm:px-6 lg:px-8">
      <CategoryFilter locale={locale} />
      
      <div class="mt-8 sm:mt-12">
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8">
          {postsData.map(post => (
            <article class="flex flex-col group bg-card rounded-lg overflow-hidden transition-all duration-300 hover:shadow-lg">
              <a
                href={`/${locale}/blog/${post.slug}/`}
                class="relative aspect-[16/9] overflow-hidden"
              >
                {post.cover ? (
                  <Image
                    src={post.cover}
                    alt={post.title}
                    width={POST_IMAGE_SIZES.width}
                    height={POST_IMAGE_SIZES.height}
                    quality={POST_IMAGE_SIZES.quality}
                    class="w-full h-full object-cover transition duration-300 group-hover:scale-105"
                    loading="lazy"
                  />
                ) : (
                  <Image
                    src={defaultCover.src}
                    alt={post.title}
                    width={defaultCover.width}
                    height={defaultCover.height}
                    class="w-full h-full object-cover transition duration-300 group-hover:scale-105"
                    loading="lazy"
                  />
                )}
                <div class="absolute inset-0 bg-black/0 group-hover:bg-black/10 transition-colors duration-300" />
              </a>

              <div class="flex flex-col flex-1 p-4 sm:p-6">
                <div class="flex items-center justify-between mb-4">
                  <a
                    href={`/${locale}/blog/category/${post.category}/`}
                    transition:name={`badge-cat-${post.originalSlug}`}
                  >
                    <Badge radius="md" className="capitalize">
                      {post.categoryTranslated}
                    </Badge>
                  </a>
                  <span
                    class="text-sm font-medium text-muted-foreground"
                    transition:name={`pubDate-${post.originalSlug}`}
                  >
                    {new Date(post.date).toLocaleDateString(locale, {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </span>
                </div>

                <a
                  href={`/${locale}/blog/${post.slug}/`}
                  class="group-hover:underline mt-auto"
                >
                  <h2
                    class="font-heading text-lg sm:text-xl lg:text-2xl leading-tight line-clamp-3"
                    transition:name={`title-${post.originalSlug}`}
                  >
                    {post.title}
                  </h2>
                </a>
              </div>
            </article>
          ))}
        </div>
      </div>
    </main>
  </div>
</Layout>