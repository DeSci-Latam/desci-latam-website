---
import { LOCALES, useTranslations, type Lang } from "@/i18n";
import Layout from "@/layouts/Base";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import PageHeadline from "@/components/PageHeadline";
import BlogHeader from "@/components/blog-header";

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

const posts = (await getCollection("projects"))
  .filter((post) => post.slug.split("/")[0] === locale)
  .sort((a, b) => a.data.date.valueOf() - b.data.date.valueOf());

const title = t({
  es: "Proyectos",
  en: "Projects",
  pt: "Projetos",
});

export const getStaticPaths = () =>
  Object.keys(LOCALES).map((lang) => ({
    params: { lang },
  }));
---

<!-- ---
import BlogHeader from "@/components/blog-header";
import BlogCard from "@/components/cards/blog-card";
import MainLayout from "@/layouts/main-layout";
import { getPosts } from "@/lib/fetchers";

const posts = await getPosts();
---

<MainLayout title="Static Blog">
  <section class="container py-10">
    <BlogHeader title="Blog" />

    <div
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-9 md:gap-y-11 lg:gap-y-16 lg:gap-x-8"
    >
      {posts.map((post) => <BlogCard {...post} />)}
    </div>
  </section>
</MainLayout> -->



<Layout {title}>

  <section class="container py-10">
  <!--   <PageHeadline  /> -->
   
    <BlogHeader {title} />
    <div
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-9 md:gap-y-11 lg:gap-y-16 lg:gap-x-8"
    >
    <ul>
      {
        posts.map((post) => {
          const [, ...slug] = post.slug.split("/");
          return (
            <li>
              <a href={`/${locale}/projects/${slug.join("/")}/`}>
                {post.data.cover && (
                  <Image src={post.data.cover} alt={post.data.title} />
                )}
                <h2>{post.data.title}</h2>
              </a>
            </li>
          );
        })
      }
    </ul>
    </div>
  </section>
 


 
</Layout>

<style>
  p {
    margin-top: var(--sp-s);
  }
  ul {
    margin-block-start: var(--sp-m);
    display: grid;
    gap: var(--sp-s);
    grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  }

  li {
    margin-bottom: 1rem;
    img {
      border-radius: 6px;
    }
  }
</style>
