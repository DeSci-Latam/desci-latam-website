---
import type { CollectionEntry } from 'astro:content';
import { Badge } from '@/components/ui/badge';
import Base from '@/layouts/Base';
import type { TableOfContents } from "@/lib/toc";
import type { Items } from '@/lib/toc';
import { DashboardTableOfContents } from "@/components/toc";

interface Props {
  title: string;
  description: string;
  type: string;
  date: Date;
  tags: string[];
  cover: {
    src: string;
    width: number;
    height: number;
    format: string;
  };
  amount: string;
  projectTypes: string[];
  website: string;
  seo?: {
    title: string;
    description: string;
  };
  toc: Items;
}

const {
  title,
  description,
  type,
  date,
  tags,
  cover,
  amount,
  projectTypes,
  website,
  seo,
  toc
} = Astro.props;

const formattedDate = new Date(date).toLocaleDateString('es-ES', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Base title={seo?.title || title} description={seo?.description || description}>
  <article class="container max-w-3xl py-6 lg:py-12">
    <div class="space-y-4">
      <div class="space-y-2">
        <h1 class="text-4xl font-bold">{title}</h1>
        <p class="text-xl text-muted-foreground">{description}</p>
      </div>
      
      <div class="flex items-center space-x-4 text-sm">
        <time datetime={date.toISOString()}>{formattedDate}</time>
        <Badge>{type}</Badge>
      </div>

      {cover && (
        <img
          src={cover.src}
          alt={title}
          width={cover.width}
          height={cover.height}
          class="rounded-lg border bg-muted"
        />
      )}

      <div class="prose prose-slate dark:prose-invert max-w-none">
        <div class="flex justify-between items-start gap-8">
          <div class="w-full">
            <slot />
          </div>
          <div class="hidden xl:block w-72 flex-shrink-0">
            <DashboardTableOfContents toc={toc} client:load />
          </div>
        </div>
      </div>

      <div class="mt-8 space-y-4">
        <div>
          <h3 class="font-semibold">Monto de financiamiento:</h3>
          <p>{amount}</p>
        </div>
        
        <div>
          <h3 class="font-semibold">Tipos de proyectos:</h3>
          <div class="flex flex-wrap gap-2 mt-2">
            {projectTypes.map(type => (
              <Badge variant="secondary">{type}</Badge>
            ))}
          </div>
        </div>

        <div>
          <h3 class="font-semibold">Etiquetas:</h3>
          <div class="flex flex-wrap gap-2 mt-2">
            {tags.map(tag => (
              <Badge variant="outline">{tag}</Badge>
            ))}
          </div>
        </div>

        <a
          href={website}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block mt-4 px-6 py-3 bg-primary text-primary-foreground rounded-md hover:bg-primary/90"
        >
          Visitar sitio web
        </a>
      </div>
    </div>
  </article>
</Base>